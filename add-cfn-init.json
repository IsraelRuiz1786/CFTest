{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "",
    "Metadata": {
    },
    "Parameters": {
      "MyAppVpcCidr": {
          "Description": "Choose Cidr for Vpc",
          "Type": "String",
          "Default": "10.23.0.0/16"
      },
      "Subnet1Cidr": {
          "Description": "Choose Cidr for Subnet1",
          "Type": "String",
          "Default": "10.23.1.0/24"
      },
      "Subnet2Cidr": {
          "Description": "Choose Cidr for Subnet2",
          "Type": "String",
          "Default": "10.23.2.0/24"
      },
      "Subnet1AZs": {
          "Description": "Choose AZ for Subnet1",
          "Type":"AWS::EC2::AvailabilityZone::Name"
      },
      "Subnet2AZs": {
          "Description": "Choose AZ for Subnet2",
          "Type":"AWS::EC2::AvailabilityZone::Name"
      },
      "webServerKeyName": {
          "Description": "Choose key name",
          "Type": "AWS::EC2::KeyPair::KeyName"
      },
      "WebServerInstanceType": {
          "Description": "Choose instance type",
          "Type": "String",
          "Default": "t2.micro",
          "AllowedValues": ["t2.micro","t2.nano","t2.small"]
      },
      "WebServerAMIID": {
          "Description": "Add AMI for webserver",
          "Type": "String"
      }
    },
    "Mappings": {
    },
    "Conditions": {
    },
    "Resources": {
      "MyAppVpc": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": { "Ref": "MyAppVpcCidr" },
          "InstanceTenancy":"default",
          "Tags": [{"Key": "Name","Value":  "MyAppVpc"}]
        }
      },
      "Subnet1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "MapPublicIpOnLaunch": true,
          "AvailabilityZone": { "Ref": "Subnet1AZs" },
          "VpcId": { "Ref": "MyAppVpc" },
          "CidrBlock": { "Ref": "Subnet1Cidr" },
          "Tags": [{ "Key": "Name", "Value":  "Subnet1" }]
        }
      },
      "Subnet2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "MapPublicIpOnLaunch": true,
          "AvailabilityZone": { "Ref": "Subnet2AZs" },
          "VpcId": { "Ref": "MyAppVpc" },
          "CidrBlock": { "Ref": "Subnet2Cidr" },
          "Tags": [{ "Key": "Name", "Value":  "Subnet2" }]
        }
      },
      "MyAppIGW": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
          "Tags": [{ "Key": "Name", "Value":  "MyAppIGW" }]
        }
      },
      "AttachGateway": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": { "Ref": "MyAppVpc" },
          "InternetGatewayId": { "Ref": "MyAppIGW" }
        }
      },
      "PublicSubnetRT": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": { "Ref": "MyAppVpc" },
          "Tags": [{ "Key": "Name", "Value":  "PublicSubnetRT" }]
        }
      },
      "RouteIGW": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "RouteTableId": { "Ref": "PublicSubnetRT" },
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": { "Ref": "MyAppIGW" }
        }
      },
      "Subnet1RouteTableAssoc": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": { "Ref": "Subnet1" },
          "RouteTableId": { "Ref": "PublicSubnetRT" }
        }
      },
      "Subnet2RouteTableAssoc": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": { "Ref": "Subnet2" },
          "RouteTableId": { "Ref": "PublicSubnetRT" }
        }
      },
      "webServerSecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "Allow http access from everywhere",
          "GroupName": "webServerSecurityGroup",
          "SecurityGroupIngress" : [{
              "IpProtocol" : "tcp",
              "FromPort" : "80",
              "ToPort" : "80",
              "CidrIp" : "0.0.0.0/0"
            },
            {
                "IpProtocol" : "tcp",
                "FromPort" : "22",
                "ToPort" : "22",
                "CidrIp" : "0.0.0.0/0"
            }
          ],
          "VpcId" : { "Ref": "MyAppVpc" },
          "Tags" :  [ { "Key": "Name", "Value":  "webServerSecurityGroup" } ]
        }
      },
      "Webserver1": {
          "Type": "AWS::EC2::Instance",
          "Metadata" : {
          "AWS::CloudFormation::Init" : {
            "config" : {
              "packages" : {
                "yum": {
                  "httpd": []
                }
              },
              "groups" : {},
              "users" : {},
              "sources" : {},
              "files" : {
                "/var/www/html/index.html":{
                  "content" : "<h1>Deployed by CloudFormation</h1>"
                }
              },
              "commands" : {},
              "services" : {
                "sysvinit":{
                  "httpd":{
                    "enabled": "true",
                    "ensureRunning": "true"
                  }
                }
              }
            }
          },
          "Properties": {
              "KeyName": { "Ref": "webServerKeyName" },
              "ImageId": { "Ref": "WebServerAMIID" },
              "InstanceType": { "Ref": "WebServerInstanceType" },
              "Monitoring": "false",
              "SecurityGroupIds" : [{ "Ref": "webServerSecurityGroup" }],
              "SubnetId": { "Ref": "Subnet1" },
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": "Webserver1"
                  }
              ],
              "UserData": {
                  "Fn::Base64": {
                      "Fn::Join": [
                          "",
                          [
                              "#!/bin/bash -ex\n",
                              "/opt/aws/bin/cfn-init -v ",
                              "        --stack ",
                              {
                                "Ref": "AWS::StackName"
                              },
                              "         --resource Webserver1 ",
                              "         --region ",
                              {
                                "Ref": "AWS::Region"
                              },
                              "\n"
                          ]
                      ]
                  }
              }
            }
              }
    },
    "Outputs": {
    }
}
}
